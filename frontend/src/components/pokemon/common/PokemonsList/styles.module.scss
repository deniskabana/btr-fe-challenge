@use '@carbon/layout';
@use '@carbon/type';
@use '@carbon/themes';
@use '@carbon/colors';
@import '@/styles/variables';

/**
  * ðŸ’¡ AUTHOR'S NOTE:
  * - this file is a result of multiple iterations and refactors and I just stopped caring for the purpose of this demo
  * - feel free to judge me by `../PokemongsGrid/styles.module.scss` instead, which I treated as a first-class citizen
  */

.EntityListView {
  padding: layout.$spacing-04 0 0;
}

.EntityList {
  display: flex;
  flex-direction: column;
  gap: layout.$spacing-04;
  width: 100%;
}

.ListItem {
  display: flex;
  gap: layout.$spacing-04;
  flex: 1 0 100%;
  position: relative;
  align-items: center;
  border-radius: $border-radius-default;

  a {
    border-radius: $border-radius-default;
    padding: layout.$spacing-03;
    flex: 1 0 100%;
    width: 100%;
    text-decoration: none;
    color: var(--cds-text-primary);
    display: flex;
    flex-direction: row;
    gap: layout.$spacing-04;
    border: 1px solid $border-color-lighter;
    transition: all $transition-duration-default $transition-productive;
    box-shadow: $box-shadow-mini;

    &:hover,
    &:focus {
      border-color: $color-secondary;
      box-shadow: $box-shadow-default;

      .Name {
        text-decoration: underline;
      }
    }
  }

  [data-dark-mode='true'] & {
    background: themes.$layer-02;
  }
}

.FavoriteButton {
  $color: colors.$red-50;

  padding-top: 0;
  border: 1px solid $color !important;
  display: flex;
  align-items: center;
  background-color: transparent !important;

  &:hover,
  &:focus,
  &:active {
    background-color: $color;
  }

  svg {
    width: 65%;
    height: 65%;

    * {
      fill: $color;
    }
  }
}

.Image {
  width: 3rem;
  height: 3rem;
  padding: layout.$spacing-04;
  background-color: white; // Those are JPEGs
  border-radius: $border-radius-default;
  overflow: hidden;
  position: relative;

  img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    transform: scale3d(1);
    transition: all $transition-duration-slow $transition-expressive;
  }
}

.ImageOverlay {
  @include type.type-style('body-02');

  position: absolute;
  inset: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  font-weight: $font-weight-semibold;
  background-color: #{rgba(darken($color-secondary, 35%), 0.45)};
  color: white;
  pointer-events: none;
  transition: all $transition-duration-default $transition-productive;
  opacity: 0;
  z-index: 1;

  [data-dark-mode='true'] & {
    background-color: #{rgba(darken($color-secondary, 55%), 0.65)};
  }
}

.MetaWrapper {
  flex: 1 1 auto;
  display: flex;
  justify-content: flex-start;
  align-items: center;

  >*:first-child {
    flex-grow: 1;
  }
}

.Name {
  @include type.type-style('heading-compact-02');

  color: $color-secondary !important;

  &:hover,
  &:focus {
    text-decoration: underline;
  }
}

.Types {
  @include type.type-style('body-compact-01');
}